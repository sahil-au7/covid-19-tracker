[{"C:\\Node\\Project React\\covid-19-tracker\\src\\index.js":"1","C:\\Node\\Project React\\covid-19-tracker\\src\\App.js":"2","C:\\Node\\Project React\\covid-19-tracker\\src\\components\\InfoBox.js":"3","C:\\Node\\Project React\\covid-19-tracker\\src\\components\\Map.js":"4","C:\\Node\\Project React\\covid-19-tracker\\src\\components\\Table.js":"5","C:\\Node\\Project React\\covid-19-tracker\\src\\utilities\\util.js":"6","C:\\Node\\Project React\\covid-19-tracker\\src\\components\\LineGraph.js":"7"},{"size":219,"mtime":1610468965475,"results":"8","hashOfConfig":"9"},{"size":4700,"mtime":1610645230376,"results":"10","hashOfConfig":"9"},{"size":593,"mtime":1610476741347,"results":"11","hashOfConfig":"9"},{"size":155,"mtime":1610477793809,"results":"12","hashOfConfig":"9"},{"size":381,"mtime":1610647042310,"results":"13","hashOfConfig":"9"},{"size":226,"mtime":1610647178971,"results":"14","hashOfConfig":"9"},{"size":1010,"mtime":1610646931639,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"m6391f",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Node\\Project React\\covid-19-tracker\\src\\index.js",[],["32","33"],"C:\\Node\\Project React\\covid-19-tracker\\src\\App.js",["34","35"],"import {\n  Card,\n  CardContent,\n  FormControl,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport InfoBox from \"./components/InfoBox\";\nimport Table from \"./components/Table\";\nimport Map from \"./components/Map\";\nimport { sortData } from \"./utilities/util\";\nimport LineGraph from \"./components/LineGraph\";\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [flag, setFlag] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [sortBy, setSortBy] = useState(\"cases\");\n\n  useEffect(async () => {\n    await fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => setCountryInfo(data));\n  }, []);\n\n  useEffect(() => {\n    const fetchingData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          const sortedData = sortData(data, sortBy);\n          // console.log(sortBy);\n          // console.log(sortedData);\n          setTableData(sortedData);\n          setCountries(countries);\n        });\n    };\n    fetchingData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        if (countryCode !== \"worldwide\") {\n          setFlag(data.countryInfo.flag);\n        }\n      });\n  };\n\n  const sortDataBy = (event) => {\n    const sort = event.target.value;\n    setSortBy(sort);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1 className=\"app__headerTitle\">COVID-19 TRACKER</h1>\n          {country === \"worldwide\" ? (\n            <img\n              className=\"app__flag\"\n              src=\"https://www.pikpng.com/pngl/m/209-2093609_globe-black-and-white-png-world-globe-black.png\"\n              alt=\"\"\n            />\n          ) : (\n            <img className=\"app__flag\" src={flag} alt=\"\" />\n          )}\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries?.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            title=\"Coronavirus Cases\"\n            cases={countryInfo.todayCases}\n            total={countryInfo.active}\n          />\n          <InfoBox\n            title=\"Recovered\"\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n          />\n          <InfoBox\n            title=\"Deaths\"\n            cases={countryInfo.todayDeaths}\n            total={countryInfo.deaths}\n          />\n        </div>\n        {/* Map */}\n        <Map />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__rightTable\">\n            <h3 className=\"app__rightTitle\">Live Cases by Country</h3>\n            <FormControl className=\"app__rightTableDropdownMenu\">\n              <p className=\"app__rightTableDropdownSort\">SortBy: </p>\n              <Select\n                variant=\"outlined\"\n                value={sortBy}\n                onChange={sortDataBy}\n                className=\"app__rightTableDropdown\"\n              >\n                <MenuItem value=\"cases\">Cases</MenuItem>\n                <MenuItem value=\"active\">Active</MenuItem>\n                <MenuItem value=\"deaths\">Deaths</MenuItem>\n                <MenuItem value=\"recovered\">Recovered</MenuItem>\n                <MenuItem value=\"critical\">Critical</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          {/* Table */}\n          <Table countries={tableData} sortBy={sortBy} />\n          <h3>Worldwide new Cases</h3>\n          {/* <Graph /> */}\n          <LineGraph />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Node\\Project React\\covid-19-tracker\\src\\components\\InfoBox.js",[],"C:\\Node\\Project React\\covid-19-tracker\\src\\components\\Map.js",[],"C:\\Node\\Project React\\covid-19-tracker\\src\\components\\Table.js",[],"C:\\Node\\Project React\\covid-19-tracker\\src\\utilities\\util.js",[],"C:\\Node\\Project React\\covid-19-tracker\\src\\components\\LineGraph.js",["36","37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":23,"column":13,"nodeType":"45","endLine":27,"endColumn":4},{"ruleId":"43","severity":1,"message":"46","line":46,"column":6,"nodeType":"47","endLine":46,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"49","severity":1,"message":"53","line":5,"column":10,"nodeType":"51","messageId":"52","endLine":5,"endColumn":14},{"ruleId":"49","severity":1,"message":"54","line":16,"column":9,"nodeType":"51","messageId":"52","endLine":16,"endColumn":23},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'sortBy'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-unused-vars","'Line' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'buildChartData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [sortBy]",{"range":"60","text":"61"},[1457,1459],"[sortBy]"]